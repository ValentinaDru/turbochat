# Этот код определяет модель User, которая наследуется от ApplicationRecord, 
# что является общим для моделей в Rails. В модели User используется gem 
# Devise, который обеспечивает аутентификацию пользователей в приложении.

class User < ApplicationRecord
  # Include default devise modules. Others available are:
  # :confirmable, :lockable, :timeoutable, :trackable and :omniauthable

  # Описание модулей devise включает:
  # 'database_authenticatable:' обеспечивает аутентификацию через базу данных.
  # 'registerable:' позволяет пользователям регистрироваться и управлять своим аккаунтом.
  # 'recoverable:' обеспечивает возможность сброса пароля через электронную почту.
  # 'rememberable:' добавляет функциональность "запомнить меня" для автоматического входа в систему.
  # 'validatable:' обеспечивает валидацию поля электронной почты и пароля.
  devise :database_authenticatable, :registerable,
         :recoverable, :rememberable, :validatable

  # Блок scope определяет область видимости для модели User. В данном случае, 
  # определенный scope называется all_except, который принимает аргумент user и 
  # возвращает всех пользователей, кроме указанного user.  
         
  scope :all_except, -> (user) { where.not(id:user) }    
  after_create_commit { broadcast_append_to "users" } 

  Это означает, что после создания нового пользователя и сохранения его в базе
  данных, будет выполнен определенный код. В данном случае, этот код отправит 
  сообщение о создании нового пользователя в канал "users". Это позволяет 
  обновлять интерфейс приложения в реальном времени, чтобы пользователи могли 
  видеть новые данные без необходимости обновления страницы.   
end
